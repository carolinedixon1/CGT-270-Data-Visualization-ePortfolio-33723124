<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='netflix_titles+ (netflix_titles)' inline='true' name='federated.1swjr581uev66j161m6411scgmhf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles' name='excel-direct.0svzm1w1rivpuz1azrtab0vejpuv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/carri/OneDrive/Documents/netflix_titles.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0svzm1w1rivpuz1azrtab0vejpuv' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
          <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
            <column datatype='string' name='listed_in' ordinal='0' />
            <column datatype='integer' name='show_id' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0svzm1w1rivpuz1azrtab0vejpuv' name='netflix_titles' table='[netflix_titles$]' type='table'>
            <columns gridOrigin='A1:I6237:no:A1:I6237:0' header='yes' outcome='2'>
              <column datatype='string' name='duration_minutes' ordinal='0' />
              <column datatype='string' name='duration_seasons' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='title' ordinal='3' />
              <column datatype='date' name='date_added' ordinal='4' />
              <column datatype='integer' name='release_year' ordinal='5' />
              <column datatype='string' name='rating' ordinal='6' />
              <column datatype='string' name='description' ordinal='7' />
              <column datatype='integer' name='show_id' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.0svzm1w1rivpuz1azrtab0vejpuv' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
            <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
              <column datatype='string' name='listed_in' ordinal='0' />
              <column datatype='integer' name='show_id' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[date_added]' value='[netflix_titles].[date_added]' />
          <map key='[description]' value='[netflix_titles].[description]' />
          <map key='[duration_minutes]' value='[netflix_titles].[duration_minutes]' />
          <map key='[duration_seasons]' value='[netflix_titles].[duration_seasons]' />
          <map key='[listed_in]' value='[netflix_titles_category].[listed_in]' />
          <map key='[rating]' value='[netflix_titles].[rating]' />
          <map key='[release_year]' value='[netflix_titles].[release_year]' />
          <map key='[show_id (netflix!titles!category)]' value='[netflix_titles_category].[show_id]' />
          <map key='[show_id]' value='[netflix_titles].[show_id]' />
          <map key='[title]' value='[netflix_titles].[title]' />
          <map key='[type]' value='[netflix_titles].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I6237:no:A1:I6237:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B10001:no:A1:B10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_minutes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_minutes]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration_minutes</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_seasons</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_seasons]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration_seasons</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!category_E1881D69639F472CAAEB0D3453A1AF54]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id (netflix!titles!category)]</local-name>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!category_E1881D69639F472CAAEB0D3453A1AF54]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_category' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!category_E1881D69639F472CAAEB0D3453A1AF54]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' role='measure' type='quantitative' />
      <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Duration Minutes' datatype='string' default-role='measure' default-type='quantitative' name='[duration_minutes]' role='dimension' type='nominal' />
      <column caption='Duration Seasons' datatype='string' name='[duration_seasons]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id (Netflix!Titles!Category)' datatype='integer' name='[show_id (netflix!titles!category)]' role='dimension' type='ordinal' />
      <column caption='Show Id' datatype='integer' name='[show_id]' role='dimension' type='ordinal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='netflix_titles_category' id='netflix!titles!category_E1881D69639F472CAAEB0D3453A1AF54'>
            <properties context=''>
              <relation connection='excel-direct.0svzm1w1rivpuz1azrtab0vejpuv' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
                <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='listed_in' ordinal='0' />
                  <column datatype='integer' name='show_id' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='netflix_titles' id='netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F'>
            <properties context=''>
              <relation connection='excel-direct.0svzm1w1rivpuz1azrtab0vejpuv' name='netflix_titles' table='[netflix_titles$]' type='table'>
                <columns gridOrigin='A1:I6237:no:A1:I6237:0' header='yes' outcome='2'>
                  <column datatype='string' name='duration_minutes' ordinal='0' />
                  <column datatype='string' name='duration_seasons' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='title' ordinal='3' />
                  <column datatype='date' name='date_added' ordinal='4' />
                  <column datatype='integer' name='release_year' ordinal='5' />
                  <column datatype='string' name='rating' ordinal='6' />
                  <column datatype='string' name='description' ordinal='7' />
                  <column datatype='integer' name='show_id' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[show_id]' />
              <expression op='[show_id (netflix!titles!category)]' />
            </expression>
            <first-end-point object-id='netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F' />
            <second-end-point object-id='netflix!titles!category_E1881D69639F472CAAEB0D3453A1AF54' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Number of Titles per Director'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 Biggest Directors on Netflix</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles+ (netflix_titles)' name='federated.1swjr581uev66j161m6411scgmhf' />
          </datasources>
          <datasource-dependencies datasource='federated.1swjr581uev66j161m6411scgmhf'>
            <_.fcp.ObjectModelTableType.false...column caption='netflix_titles' datatype='integer' name='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='netflix_titles' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' role='measure' type='quantitative' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[director]' derivation='None' name='[none:director:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1swjr581uev66j161m6411scgmhf].[none:director:nk]'>
            <groupfilter expression='COUNT([__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]) &gt; 10' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:director:nk]' />
                <groupfilter function='member' level='[none:director:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1swjr581uev66j161m6411scgmhf].[none:director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1swjr581uev66j161m6411scgmhf].[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]' />
              <color column='[federated.1swjr581uev66j161m6411scgmhf].[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]' />
              <text column='[federated.1swjr581uev66j161m6411scgmhf].[none:director:nk]' />
              <text column='[federated.1swjr581uev66j161m6411scgmhf].[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C76B5AD-F5BD-472D-A5B0-0B817CD6D4F4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Titles in Each Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles+ (netflix_titles)' name='federated.1swjr581uev66j161m6411scgmhf' />
          </datasources>
          <datasource-dependencies datasource='federated.1swjr581uev66j161m6411scgmhf'>
            <_.fcp.ObjectModelTableType.false...column caption='netflix_titles' datatype='integer' name='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='netflix_titles' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F]' role='measure' type='quantitative' />
            <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
            <column-instance column='[listed_in]' derivation='None' name='[none:listed_in:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1swjr581uev66j161m6411scgmhf].[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]</rows>
        <cols>[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]</cols>
      </table>
      <simple-id uuid='{72B01B7C-F06E-461B-9E45-61EBA00FF43A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Movie Length of Genres</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles+ (netflix_titles)' name='federated.1swjr581uev66j161m6411scgmhf' />
          </datasources>
          <datasource-dependencies datasource='federated.1swjr581uev66j161m6411scgmhf'>
            <column-instance column='[duration_minutes]' derivation='CountD' name='[ctd:duration_minutes:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Duration Minutes' datatype='string' default-role='measure' default-type='quantitative' name='[duration_minutes]' role='dimension' type='nominal' />
            <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
            <column-instance column='[listed_in]' derivation='None' name='[none:listed_in:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:listed_in:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:listed_in:nk]' member='%null%' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Anime Series&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;British TV Shows&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Classic &amp; Cult TV&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Crime TV Shows&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Docuseries&quot;' />
                <groupfilter from='&quot;International TV Shows&quot;' function='range' level='[none:listed_in:nk]' to='&quot;Korean TV Shows&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Movies&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Reality TV&quot;' />
                <groupfilter from='&quot;Romantic TV Shows&quot;' function='range' level='[none:listed_in:nk]' to='&quot;Spanish-Language TV Shows&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Stand-Up Comedy &amp; Talk Shows&quot;' />
                <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Teen TV Shows&quot;' />
                <groupfilter from='&quot;TV Action &amp; Adventure&quot;' function='range' level='[none:listed_in:nk]' to='&quot;TV Thrillers&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1swjr581uev66j161m6411scgmhf].[ctd:duration_minutes:qk]' scope='cols' value='Duration (minutes)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]</rows>
        <cols>[federated.1swjr581uev66j161m6411scgmhf].[ctd:duration_minutes:qk]</cols>
      </table>
      <simple-id uuid='{FE1B2A95-CEFE-4A32-9CAA-CA2C8262FC99}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Number of Titles per Director' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Number of Titles per Director' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{45434367-C14D-4741-BE0C-A1FE68571171}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Number of Titles per Director'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1swjr581uev66j161m6411scgmhf].[none:director:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1swjr581uev66j161m6411scgmhf].[__tableau_internal_object_id__].[cnt:netflix!titles_FC13763B2E1F444FAC2FA3EA5B93702F:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:director:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E628057-35AA-4112-9DEA-AA01FD9F770C}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:duration_minutes:nk]</field>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]</field>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:show_id (netflix!titles!directors):ok]</field>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:show_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BC2585F-0CD0-4B37-AD5E-4ECB5E5FF76C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Number of Titles per Director' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7BA3B780-2F5D-480E-9606-F0A63B9998FC}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:duration_minutes:nk]</field>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:listed_in:nk]</field>
            <field>[federated.1swjr581uev66j161m6411scgmhf].[none:show_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C0571CF-9A0A-4555-9593-1B1C012158FD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Titles per Director' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      ocjuuzgOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
